{"code":"// Das ist die Spielfläche\r\nimport { bricksSpecial, KIWI, SCALE, Pixel } from \"./constants\";\r\nexport class Playground {\r\n    constructor(game, specialMode) {\r\n        this.game = game;\r\n        this.kiwi = [];\r\n        this.scatter();\r\n        this.specialMode = specialMode;\r\n    }\r\n    // Kiwis werden zufällig verstreut\r\n    scatter() {\r\n        const { nbPixelX: nbCellsX, nbPixelY: nbCellsY, level } = this.game.getSettings();\r\n        const nbKiwi = KIWI * (level + 1);\r\n        for (let count = 0; count < nbKiwi; count++) {\r\n            // ls: so lange condition true wird die While Schleife ausgeführt \r\n            let condition = true;\r\n            // ls: While Schleife für den Fall dass Kiwis unter den ON20 Wänden ausgegeben werden sollten\r\n            while (condition === true) {\r\n                let x = Math.floor(Math.random() * nbCellsX);\r\n                let y = Math.floor(Math.random() * nbCellsY);\r\n                // ls: Prüfe falls specialMode aktiv ist, wenn ja dürfen keine Kiwis unter den Wänden liegen\r\n                if (this.specialMode === true) {\r\n                    //Prüfe ob die zufällig verstreuten Kiwis unter einer Wand liegen\r\n                    if (bricksSpecial.find(el => x == el.x && y == el.y) == undefined) {\r\n                        this.kiwi.push(new Pixel(x, y));\r\n                        condition = false;\r\n                    }\r\n                    // ls: Normaler Modus kann die Kiwis überall auf dem Playground verteilen\r\n                }\r\n                else {\r\n                    this.kiwi.push(new Pixel(x, y));\r\n                    condition = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // das Canvas wird aufgespannt\r\n    draw(time, context) {\r\n        const { width, height, pixelWidth: cellWidth, pixelHeight: cellHeight } = this.game.getSettings();\r\n        context.fillStyle = \"black\";\r\n        context.lineWidth = 1 * SCALE;\r\n        for (let x = 0; x <= width; x += cellWidth) {\r\n            context.beginPath();\r\n            context.moveTo(x, 0);\r\n            context.lineTo(x, height);\r\n            context.stroke();\r\n        }\r\n        for (let y = 0; y <= height; y += cellHeight) {\r\n            context.beginPath();\r\n            context.moveTo(0, y);\r\n            context.lineTo(width, y);\r\n            context.stroke();\r\n        }\r\n        // Kiwi aussehen\r\n        context.fillStyle = \"#03DAC5\";\r\n        this.kiwi.forEach(cell => context.fillRect(cellWidth * cell.x, cellHeight * cell.y, cellWidth, cellHeight)); //ändere Farbe der Zelle (x und y Wert) welche eine Kiwi ist\r\n    }\r\n    // Prüfe ob die Zelle eine Kiwi ist\r\n    isKiwi(cell) {\r\n        return this.kiwi.find(el => cell.x == el.x && cell.y == el.y);\r\n    }\r\n    // gegessene Kiwi wird aus dem Array herausgefiltert \r\n    eatKiwi(pixel) {\r\n        this.kiwi = this.kiwi.filter(el => pixel.x != el.x || pixel.y != el.y);\r\n    }\r\n    // prüfen, ob alle Kiwis des Levels gefressen wurden\r\n    isDone() {\r\n        return this.kiwi.length == 0;\r\n    }\r\n}\r\n","references":["C:/Users/Linda/OneDrive/Desktop/snake-game/src/constants.ts","C:/Users/Linda/OneDrive/Desktop/snake-game/src/game.ts"]}
